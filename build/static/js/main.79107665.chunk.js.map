{"version":3,"sources":["Home.js","index.js","kindness.png"],"names":["Home","useState","copied","state","setState","visible","setvisible","users","setusers","className","src","kindness","alt","onClick","fetch","then","response","json","data","info","arr","emptyArray","length","r","Math","floor","random","indexOf","push","makeRandom","final","style","fontSize","color","fontStyle","type","height","width","map","user","index","id","firstName","lastName","location","context","text","paymentLink","onCopy","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wPAgFeA,MA1Ef,WAAiB,IAAD,EACYC,mBAAS,CAACC,QAAQ,IAD9B,mBACPC,EADO,KACAC,EADA,OAEgBH,oBAAS,GAFzB,mBAEPI,EAFO,KAEEC,EAFF,OAGYL,mBAAS,MAHrB,mBAGPM,EAHO,KAGAC,EAHA,KA4Bd,OAAGH,EAEC,yBAAKI,UAAU,OACb,yBAAKA,UAAU,YAAYC,IAAKC,IAAUC,IAAI,aAC9C,gDACA,4MAAiL,6BAAK,6BAAtL,qMACA,4BAAQH,UAAU,SAASI,QA7BjC,WACEC,MAFa,mFAGZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAKZ,SAAoBC,GAClB,IAAIC,EAAM,GACNC,EAAa,GACnB,KAAMD,EAAIE,OAAS,IAAG,CACpB,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,EAAKG,SACjB,IAApBF,EAAIO,QAAQJ,KACbH,EAAIQ,KAAKL,GACTF,EAAWO,KAAKT,EAAKI,KAI3B,OAAOF,EAhBWQ,CAAWX,MACxBH,MAAK,SAAAe,GAAK,OAAGtB,EAASsB,MACvBxB,GAAYD,KAwBR,eACA,4BAAQI,UAAU,kBAAlB,gBAKJ,6BACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACjB,wBAAIsB,MAAO,CAACC,SAAU,OAAQC,MAAO,UAArC,qBAEA,yIACE,wBAAIF,MAAO,CAACE,MAAM,OAAQC,UAAU,WAApC,iEAEF,6BACE3B,EAKI,KALG,kBAAC,IAAD,CAAQE,UAAU,SACtB0B,KAAK,eACLF,MAAM,UACNG,OAAQ,GACRC,MAAO,KAEX9B,GAAUA,EAAM+B,KAAK,SAACC,GAAD,OACpB,yBAAKC,MAAOD,EAAKE,GAAIhC,UAAU,YAC/B,wBAAIsB,MAAO,CAACC,SAAS,SAAS,8BAAOO,EAAKG,UAAZ,IAAwBH,EAAKI,UAA3D,KAA8EJ,EAAKK,SAAnF,KACA,6BACA,gCAAML,EAAKM,QAAX,KACA,kBAAC,kBAAD,CAAiBC,KAAMP,EAAKQ,YACxBC,OAAQ,kBAAM5C,EAAS,CAACF,QAAQ,MAChC,gEAEDC,EAAMD,OAAS,0BAAM6B,MAAO,CAACE,MAAO,OAAQD,SAAU,SAAvC,WAAiE,KACjF,oCClERiB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.79107665.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Loader from 'react-loader-spinner'\nimport './App.css';\nimport kindness from './kindness.png';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nfunction Home() {\n  const [state, setState] = useState({copied: false})\n  const [visible, setvisible] = useState(true)\n  const [users, setusers] = useState(null);\n  const apiURL = 'https://cors-anywhere.herokuapp.com/https://good-faith.herokuapp.com/api/people'\n  function fetchusers() {\n    fetch(apiURL)\n    .then(response => response.json())\n    .then(data => makeRandom(data))\n    .then(final =>setusers(final))\n    setvisible(!visible) //using this to manage the state of the results page\n  }\n\n  function makeRandom(info) {\n    var arr = [];\n    let emptyArray = []\n  while(arr.length < 10){\n    var r = Math.floor(Math.random() * info.length);\n    if(arr.indexOf(r) === -1) {\n      arr.push(r);\n      emptyArray.push(info[r])\n\n    }\n}\nreturn emptyArray\n\n  }\n\n  if(visible) {\n    return (\n      <div className=\"App\">\n        <img className=\"App-logo \" src={kindness} alt=\"kindness\"/>\n        <h1>Angels among us.</h1>\n        <h2>'Angels among us' is a simple tool for people with relatively secure financial statuses to help people whose means of livelihood have been affected by the COVID-19 outbreak.<br/><br/> When you click the 'Be an angel' button, we'll send you a random list of ten people you can contribute to. We suggest that you send money to each of the ten (eg. N2,000-N10,000 to each person)</h2>\n        <button className=\"Button\" onClick={fetchusers}>Be an angel</button>\n        <button className=\"Button Button2\">I need help</button>\n      </div>\n    );\n  }\n  return (\n    <div>\n    <div className=\"header\">\n      <div className=\"Title\">\n    <h1 style={{fontSize: '25px', color: 'green'}}>Angels among us.</h1>\n    </div>\n    <h2>A list of people who have been economically affected by the COVID-19 virus and are currently without pay.</h2>\n      <h2 style={{color:'gray', fontStyle:'italic'}}>Here are ten randomly-generated individuals who you can help</h2>\n    </div>\n    <div>\n    {!users? <Loader className=\"Loader\"\n         type=\"BallTriangle\"\n         color=\"#008000\"\n         height={40}\n         width={40}\n      />: null}\n    {users &&  users.map ((user) => (\n      <div index={user.id} className=\"userCard\">\n      <h2 style={{fontSize:'15px'}}><span>{user.firstName} {user.lastName}</span> ({user.location})</h2>\n      <hr/>\n      <h3>\"{user.context}\"</h3>\n      <CopyToClipboard text={user.paymentLink}\n          onCopy={() => setState({copied: true})}>\n          <button>Tap to copy account details</button>\n        </CopyToClipboard>\n        {state.copied ? <span style={{color: 'blue', fontSize: '12px'}}>Copied!</span> : null}\n        <br/>\n      </div>\n    ))}\n    </div>\n    </div>\n  )\n \n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Home';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","module.exports = __webpack_public_path__ + \"static/media/kindness.d6a67a89.png\";"],"sourceRoot":""}